## Q-Q plots
#qqnorm(qresid(MWTSH.YYYY)); qqline(qresid(MWTSH.YYYY))
## Cooks distance
#plot(cooks.distance(MWTSH.YYYY), type='h')
#cooksd_MWTSH.YYYY <- cooks.distance(MWTSH.YYYY)
#length(cooksd_MWTSH.YYYY[cooksd_MWTSH.YYYY > mean(cooksd_MWTSH.YYYY) * 2])
#test.data[23,]
#Save summary to txt file
sink(paste0("Z:/Projects/SPA2/Data/MWTSH_SPA2_",surveyyear,"_ModelSummary.txt"))
print(summary(MWTSH.YYYY))
sink()
#diagnostics
latt <- data.frame(test.data, res=residuals(MWTSH.YYYY,"pearson"),fit=fitted(MWTSH.YYYY)) #update model name
head(latt)
#Residuals vs fitted - full area
#plot(MWTSH.YYYY$residuals ~ MWTSH.YYYY$fitted.values )
plot(latt$res~ latt$fit )
#Plot of fitted values
#plot(MWTSH.YYYY$model$WET_MEAT_WGT   ~ MWTSH.YYYY$fitted.values )
#abline(0,1)
plot(latt$WET_MEAT_WGT   ~ latt$fit )
abline(0,1)
# prediction
Log.height.ctr <- log(seq(2.5, 197.5, by = 5)) - mean(test.data$Log.HEIGHT) #each shell height bin to predict on
depth.predict <- 85
fit.pred <- data.frame(Log.HEIGHT.CTR=Log.height.ctr,
Log.DEPTH.CTR = log(abs(depth.predict)) - mean(test.data$Log.DEPTH),
SH = seq(2.5, 197.5, by = 5),
depth_m = rep(depth.predict, length(Log.height.ctr)))
fit.pred$pred.mtwt <- as.vector(predict(MWTSH.YYYY,newdata=fit.pred,type="response"))
head(fit.pred)
plot(fit.pred$pred.mtwt~fit.pred$SH )
fit.pred.1996 <- fit.pred
#create matrix of depths by tow to use in predict function
Log.height.ctr <- log(seq(2.5, 197.5, by = 5)) - mean(test.data$Log.HEIGHT) #each shell height bin to predict on
log.ctr.adj_depth <- log(abs(livefreqYYYY$ADJ_DEPTH)) - mean(test.data$Log.DEPTH) #depth by tow
temp <- matrix(NA,dim(livefreqYYYY)[1],40)
tow.pred <- (1:dim(livefreqYYYY)[1])
#Predict using fixed effects for tows that weren't sampled for meat weight shell height
for(i in tow.pred) temp[i,] <- as.vector(predict(MWTSH.YYYY,newdata=data.frame(Log.HEIGHT.CTR=Log.height.ctr,Log.DEPTH.CTR=rep(log.ctr.adj_depth[i], 40)),type="response"))
temp
#multply temp matrix (weight) by live numbers to get weight/size bin
liveweightYYYY[,grep("BIN_ID_0", colnames(liveweightYYYY)):grep("BIN_ID_195", colnames(liveweightYYYY))] <- temp*livefreqYYYY[,grep("BIN_ID_0", colnames(livefreqYYYY)):grep("BIN_ID_195", colnames(livefreqYYYY))]
#export file for later analysis
write.csv(liveweightYYYY, paste0("Z:/Projects/SPA2/Data/SPA2liveweight",surveyyear,".csv") , row.names = FALSE)
rm(uid)
rm(pwd)
rm(un.sameotoj)
rm(pw.sameotoj)
### save workspace as .RData object
save.image(file = paste0("Z:/Projects/SPA2/Data/SPA2_",surveyyear,".RData"))
## save only the objects we need later for showing MWSH plots for different years on same plots
save(MWTSH.YYYY, latt, liveweightYYYY, detail.foryear, livefreqYYYY,
file=paste0("Z:/Projects/SPA2/Data/SPA2modeloutput_",surveyyear,".RData"))
# ----  Condition for Spatial Map ----
# Only calculates the point condition for the single year you modelled above (i.e. surveyyear that's set above)
livefreq.condition.spatial <- livefreqYYYY
#adjust depth, must center on same mean as used in original model
livefreq.condition.spatial$log.ctr.adj_depth <- log(abs(livefreq.condition.spatial$ADJ_DEPTH)) - mean(test.data$Log.DEPTH)
#subset to just those tows that were detailed sampled
livefreq.condition.spatial <- livefreq.condition.spatial[is.element(livefreq.condition.spatial$TOW_NO, unique(test.data$TOW_NO)),c("TOW_NO","START_LAT", "START_LONG", "ADJ_DEPTH","log.ctr.adj_depth")]
livefreq.condition.spatial$YEAR <- surveyyear #add year to dataframe
#Predict a meat weight for 100mm for just sampled tows; #re.form=NULL (all random effects included since only predicting on those tows that were sampled)
livefreq.condition.spatial$Condition <- predict(MWTSH.YYYY,newdata=data.frame(Log.HEIGHT.CTR=rep(log(100), dim(livefreq.condition.spatial)[1])-mean(test.data$Log.HEIGHT),
Log.DEPTH.CTR=livefreq.condition.spatial$log.ctr.adj_depth,
TOW_NO=livefreq.condition.spatial$TOW_NO),
type="response")
head(livefreq.condition.spatial)
#export for spatial plot later
write.csv(livefreq.condition.spatial, paste0("Z:/Projects/SPA2/Data/SPA2_ConditionForSpatialPlot_",surveyyear,".csv"), row.names = FALSE)
# ---- For Condition Time Series Figure ----
#Mean Depth of area
livefreqYYYY %>% group_by(STRATA_ID) %>% summarise(mean_depth = mean(ADJ_DEPTH))
#1996
#STRATA_ID mean_depth
#1  26    -79.7
#set predition depth
depth.xx <- 85
condition.100mm <- predict(MWTSH.YYYY, newdata = data.frame(Log.HEIGHT.CTR=log(100) - mean(test.data$Log.HEIGHT),
Log.DEPTH.CTR = log(abs(depth.xx)) - mean(test.data$Log.DEPTH)), type = "response")
condition.100mm.1996 <- condition.100mm
condition.100mm.1996 <- data.frame(YEAR = surveyyear, Condition = condition.100mm.1996)
#1996
#17.30597
condition.100mm.1996$Depth <- depth.xx
condition.100mm.1996
#### Write out combined files for condition at 100 mm SH for all years ####
condition.100mm <- rbind(condition.100mm.2024, condition.100mm.2006, condition.100mm.1996)
condition.100mm
### Write out
write.csv(condition.100mm, paste0("Z:/Projects/SPA2/Data/condition.100mm.csv"))
fit.pred.2006
#### 2024 #####
surveyyear <- 2024
#Construct data.frame similar to GMlivenfreq for weight per tow
livefreqYYYY <- subset(livefreq, YEAR==surveyyear)
liveweightYYYY <- livefreqYYYY
#should be the same
dim(livefreqYYYY)
dim(liveweightYYYY)
table(livefreqYYYY$YEAR)
table(liveweightYYYY$YEAR)
#Subset for year
detail.foryear <- subset(dat.all, YEAR==surveyyear)
## unique tows & observations
table(detail.foryear$TOW_NO)
## 14 tows with detailed samples in 2024
#create dataset for model
test.data <- subset(detail.foryear, HEIGHT>40)
test.data$Log.HEIGHT <- log(test.data$HEIGHT)
test.data$Log.HEIGHT.CTR <- test.data$Log.HEIGHT - mean(test.data$Log.HEIGHT)
test.data$Log.DEPTH <- log(abs(test.data$ADJ_DEPTH)) #take abs to keep value positive
test.data$Log.DEPTH.CTR <- test.data$Log.DEPTH - mean(test.data$Log.DEPTH)
summary(test.data)
#plot depths by tow
png(paste0("Z:/Projects/SPA2/Figures/SPA2_towdepth_detailedsamples_",surveyyear,".png")) #!!!DEFINE
plot(ADJ_DEPTH~TOW_NO, data=test.data)
dev.off()
#run model
MWTSH.YYYY <-  glm(WET_MEAT_WGT~Log.HEIGHT.CTR+Log.DEPTH.CTR, data=test.data, family=Gamma(link=log), na.action = na.omit)
#MWTSH.YYYY.2 <-  glm(WET_MEAT_WGT~Log.HEIGHT.CTR+Log.DEPTH.CTR, data=test.data, family=gaussian(link=log), na.action = na.omit)
summary(MWTSH.YYYY)
plot(MWTSH.YYYY)
## Plot of Standardized Pearson residuals
#plot(density(rstandard(MWTSH.YYYY, type='pearson')))
## Plot of Standardized deviance residuals
#plot(density(rstandard(MWTSH.YYYY, type='deviance')))
## Checking independence of observations; standardized deviance residuals
#scatter.smooth(1:dim(test.data)[1], rstandard(MWTSH.YYYY, type='deviance'), col='gray')
## Plot residuals against fitted values
#scatter.smooth(predict(MWTSH.YYYY, type='response'), rstandard(MWTSH.YYYY, type='deviance'), col='gray')
## Q-Q plots
#qqnorm(qresid(MWTSH.YYYY)); qqline(qresid(MWTSH.YYYY))
## Cooks distance
#plot(cooks.distance(MWTSH.YYYY), type='h')
#cooksd_MWTSH.YYYY <- cooks.distance(MWTSH.YYYY)
#length(cooksd_MWTSH.YYYY[cooksd_MWTSH.YYYY > mean(cooksd_MWTSH.YYYY) * 2])
#test.data[23,]
#Save summary to txt file
sink(paste0("Z:/Projects/SPA2/Data/MWTSH_SPA2_",surveyyear,"_ModelSummary.txt"))
print(summary(MWTSH.YYYY))
sink()
#diagnostics
latt <- data.frame(test.data, res=residuals(MWTSH.YYYY,"pearson"),fit=fitted(MWTSH.YYYY)) #update model name
head(latt)
#Residuals vs fitted - full area
#plot(MWTSH.YYYY$residuals ~ MWTSH.YYYY$fitted.values )
plot(latt$res~ latt$fit )
#Plot of fitted values
#plot(MWTSH.YYYY$model$WET_MEAT_WGT   ~ MWTSH.YYYY$fitted.values )
#abline(0,1)
plot(latt$WET_MEAT_WGT   ~ latt$fit )
abline(0,1)
# prediction
Log.height.ctr <- log(seq(2.5, 197.5, by = 5)) - mean(test.data$Log.HEIGHT) #each shell height bin to predict on
depth.predict <- 85
fit.pred <- data.frame(Log.HEIGHT.CTR=Log.height.ctr,
Log.DEPTH.CTR = log(abs(depth.predict)) - mean(test.data$Log.DEPTH),
SH = seq(2.5, 197.5, by = 5),
depth_m = rep(depth.predict, length(Log.height.ctr)))
fit.pred$pred.mtwt <- as.vector(predict(MWTSH.YYYY,newdata=fit.pred,type="response"))
head(fit.pred)
plot(fit.pred$pred.mtwt~fit.pred$SH )
fit.pred$YEAR <- surveyyear
fit.pred.2024 <- fit.pred
#create matrix of depths by tow to use in predict function
Log.height.ctr <- log(seq(2.5, 197.5, by = 5)) - mean(test.data$Log.HEIGHT) #each shell height bin to predict on
log.ctr.adj_depth <- log(abs(livefreqYYYY$ADJ_DEPTH)) - mean(test.data$Log.DEPTH) #depth by tow
temp <- matrix(NA,dim(livefreqYYYY)[1],40)
tow.pred <- (1:dim(livefreqYYYY)[1])
#Predict using fixed effects for tows that weren't sampled for meat weight shell height
for(i in tow.pred) temp[i,] <- as.vector(predict(MWTSH.YYYY,newdata=data.frame(Log.HEIGHT.CTR=Log.height.ctr,Log.DEPTH.CTR=rep(log.ctr.adj_depth[i], 40)),type="response"))
temp
#multply temp matrix (weight) by live numbers to get weight/size bin
liveweightYYYY[,grep("BIN_ID_0", colnames(liveweightYYYY)):grep("BIN_ID_195", colnames(liveweightYYYY))] <- temp*livefreqYYYY[,grep("BIN_ID_0", colnames(livefreqYYYY)):grep("BIN_ID_195", colnames(livefreqYYYY))]
#export file for later analysis
write.csv(liveweightYYYY, paste0("Z:/Projects/SPA2/Data/SPA2liveweight",surveyyear,".csv"), row.names = FALSE)
rm(uid)
rm(pwd)
rm(un.sameotoj)
rm(pw.sameotoj)
### save workspace as .RData object
save.image(file = paste0("Z:/Projects/SPA2/Data/SPA2_",surveyyear,".RData"))
## save only the objects we need later for showing MWSH plots for different years on same plots
save(MWTSH.YYYY, latt, liveweightYYYY, detail.foryear, livefreqYYYY,
file=paste0("Z:/Projects/SPA2/Data/SPA2modeloutput_",surveyyear,".RData"))
# ----  Condition for Spatial Map ----
# Only calculates the point condition for the single year you modelled above (i.e. surveyyear that's set above)
livefreq.condition.spatial <- livefreqYYYY
#adjust depth, must center on same mean as used in original model
livefreq.condition.spatial$log.ctr.adj_depth <- log(abs(livefreq.condition.spatial$ADJ_DEPTH)) - mean(test.data$Log.DEPTH)
#subset to just those tows that were detailed sampled
livefreq.condition.spatial <- livefreq.condition.spatial[is.element(livefreq.condition.spatial$TOW_NO, unique(test.data$TOW_NO)),c("TOW_NO","START_LAT", "START_LONG", "ADJ_DEPTH","log.ctr.adj_depth")]
livefreq.condition.spatial$YEAR <- surveyyear #add year to dataframe
#Predict a meat weight for 100mm for just sampled tows; #re.form=NULL (all random effects included since only predicting on those tows that were sampled)
livefreq.condition.spatial$Condition <- predict(MWTSH.YYYY,newdata=data.frame(Log.HEIGHT.CTR=rep(log(100), dim(livefreq.condition.spatial)[1])-mean(test.data$Log.HEIGHT),
Log.DEPTH.CTR=livefreq.condition.spatial$log.ctr.adj_depth,
TOW_NO=livefreq.condition.spatial$TOW_NO),
type="response")
head(livefreq.condition.spatial)
#export for spatial plot later
write.csv(livefreq.condition.spatial, paste0("Z:/Projects/SPA2/Data/SPA2_ConditionForSpatialPlot_",surveyyear,".csv"), row.names = FALSE)
# ---- For Condition Time Series Figure ----
#Mean Depth of area
livefreqYYYY %>% group_by(STRATA_ID) %>% summarise(mean_depth = mean(ADJ_DEPTH))
#2024
#STRATA_ID mean_depth
#1    26      -86.8
#2    57      -84.7
#set predition depth
depth.xx <- 85
condition.100mm <- predict(MWTSH.YYYY, newdata = data.frame(Log.HEIGHT.CTR=log(100) - mean(test.data$Log.HEIGHT),
Log.DEPTH.CTR = log(abs(depth.xx)) - mean(test.data$Log.DEPTH)), type = "response")
condition.100mm.2024 <- condition.100mm
condition.100mm.2024 <- data.frame(YEAR = surveyyear, Condition = condition.100mm.2024)
condition.100mm.2024$Depth <- depth.xx
condition.100mm.2024
#2024
#8.69396
#### 2006 ####
surveyyear <- 2006
#Construct data.frame similar to GMlivenfreq for weight per tow
livefreqYYYY <- subset(livefreq, YEAR==surveyyear)
liveweightYYYY <- livefreqYYYY
#should be the same
dim(livefreqYYYY)
dim(liveweightYYYY)
table(livefreqYYYY$YEAR)
table(liveweightYYYY$YEAR)
#Subset for year
detail.foryear <- subset(dat.all, YEAR==surveyyear)
## unique tows & observations
table(detail.foryear$TOW_NO)
## only 3 tows with detailed samples  in 2006
#create dataset for model
test.data <- subset(detail.foryear, HEIGHT>40)
test.data$Log.HEIGHT <- log(test.data$HEIGHT)
test.data$Log.HEIGHT.CTR <- test.data$Log.HEIGHT - mean(test.data$Log.HEIGHT)
test.data$Log.DEPTH <- log(abs(test.data$ADJ_DEPTH)) #take abs to keep value positive
test.data$Log.DEPTH.CTR <- test.data$Log.DEPTH - mean(test.data$Log.DEPTH)
summary(test.data)
#plot depths by tow
png(paste0("Z:/Projects/SPA2/Figures/SPA2_towdepth_detailedsamples_",surveyyear,".png")) #!!!DEFINE
plot(ADJ_DEPTH~TOW_NO, data=test.data)
dev.off()
#run model
MWTSH.YYYY <-  glm(WET_MEAT_WGT~Log.HEIGHT.CTR+Log.DEPTH.CTR, data=test.data, family=Gamma(link=log), na.action = na.omit)
#MWTSH.YYYY.2 <-  glm(WET_MEAT_WGT~Log.HEIGHT.CTR+Log.DEPTH.CTR, data=test.data, family=gaussian(link=log), na.action = na.omit)
summary(MWTSH.YYYY)
plot(MWTSH.YYYY)
## Plot of Standardized Pearson residuals
#plot(density(rstandard(MWTSH.YYYY, type='pearson')))
## Plot of Standardized deviance residuals
#plot(density(rstandard(MWTSH.YYYY, type='deviance')))
## Checking independence of observations; standardized deviance residuals
#scatter.smooth(1:dim(test.data)[1], rstandard(MWTSH.YYYY, type='deviance'), col='gray')
## Plot residuals against fitted values
#scatter.smooth(predict(MWTSH.YYYY, type='response'), rstandard(MWTSH.YYYY, type='deviance'), col='gray')
## Q-Q plots
#qqnorm(qresid(MWTSH.YYYY)); qqline(qresid(MWTSH.YYYY))
## Cooks distance
#plot(cooks.distance(MWTSH.YYYY), type='h')
#cooksd_MWTSH.YYYY <- cooks.distance(MWTSH.YYYY)
#length(cooksd_MWTSH.YYYY[cooksd_MWTSH.YYYY > mean(cooksd_MWTSH.YYYY) * 2])
#test.data[23,]
#Save summary to txt file
sink(paste0("Z:/Projects/SPA2/Data/MWTSH_SPA2_",surveyyear,"_ModelSummary.txt"))
print(summary(MWTSH.YYYY))
sink()
#diagnostics
latt <- data.frame(test.data, res=residuals(MWTSH.YYYY,"pearson"),fit=fitted(MWTSH.YYYY)) #update model name
head(latt)
#Residuals vs fitted - full area
#plot(MWTSH.YYYY$residuals ~ MWTSH.YYYY$fitted.values )
plot(latt$res~ latt$fit )
#Plot of fitted values
#plot(MWTSH.YYYY$model$WET_MEAT_WGT   ~ MWTSH.YYYY$fitted.values )
#abline(0,1)
plot(latt$WET_MEAT_WGT   ~ latt$fit )
abline(0,1)
# prediction
Log.height.ctr <- log(seq(2.5, 197.5, by = 5)) - mean(test.data$Log.HEIGHT) #each shell height bin to predict on
depth.predict <- 85
fit.pred <- data.frame(Log.HEIGHT.CTR=Log.height.ctr,
Log.DEPTH.CTR = log(abs(depth.predict)) - mean(test.data$Log.DEPTH),
SH = seq(2.5, 197.5, by = 5),
depth_m = rep(depth.predict, length(Log.height.ctr)))
fit.pred$pred.mtwt <- as.vector(predict(MWTSH.YYYY,newdata=fit.pred,type="response"))
head(fit.pred)
plot(fit.pred$pred.mtwt~fit.pred$SH )
fit.pred$YEAR <- surveyyear
fit.pred.2006 <- fit.pred
#create matrix of depths by tow to use in predict function
Log.height.ctr <- log(seq(2.5, 197.5, by = 5)) - mean(test.data$Log.HEIGHT) #each shell height bin to predict on
log.ctr.adj_depth <- log(abs(livefreqYYYY$ADJ_DEPTH)) - mean(test.data$Log.DEPTH) #depth by tow
temp <- matrix(NA,dim(livefreqYYYY)[1],40)
tow.pred <- (1:dim(livefreqYYYY)[1])
#Predict using fixed effects for tows that weren't sampled for meat weight shell height
for(i in tow.pred) temp[i,] <- as.vector(predict(MWTSH.YYYY,newdata=data.frame(Log.HEIGHT.CTR=Log.height.ctr,Log.DEPTH.CTR=rep(log.ctr.adj_depth[i], 40)),type="response"))
temp
#multply temp matrix (weight) by live numbers to get weight/size bin
liveweightYYYY[,grep("BIN_ID_0", colnames(liveweightYYYY)):grep("BIN_ID_195", colnames(liveweightYYYY))] <- temp*livefreqYYYY[,grep("BIN_ID_0", colnames(livefreqYYYY)):grep("BIN_ID_195", colnames(livefreqYYYY))]
#export file for later analysis
write.csv(liveweightYYYY, paste0("Z:/Projects/SPA2/Data/SPA2liveweight",surveyyear,".csv"), row.names = FALSE)
rm(uid)
rm(pwd)
rm(un.sameotoj)
rm(pw.sameotoj)
### save workspace as .RData object
save.image(file = paste0("Z:/Projects/SPA2/Data/SPA2_",surveyyear,".RData"))
## save only the objects we need later for showing MWSH plots for different years on same plots
save(MWTSH.YYYY, latt, liveweightYYYY, detail.foryear, livefreqYYYY,
file=paste0("Z:/Projects/SPA2/Data/SPA2modeloutput_",surveyyear,".RData"))
# ----  Condition for Spatial Map ----
# Only calculates the point condition for the single year you modelled above (i.e. surveyyear that's set above)
livefreq.condition.spatial <- livefreqYYYY
#adjust depth, must center on same mean as used in original model
livefreq.condition.spatial$log.ctr.adj_depth <- log(abs(livefreq.condition.spatial$ADJ_DEPTH)) - mean(test.data$Log.DEPTH)
#subset to just those tows that were detailed sampled
livefreq.condition.spatial <- livefreq.condition.spatial[is.element(livefreq.condition.spatial$TOW_NO, unique(test.data$TOW_NO)),c("TOW_NO","START_LAT", "START_LONG", "ADJ_DEPTH","log.ctr.adj_depth")]
livefreq.condition.spatial$YEAR <- surveyyear #add year to dataframe
#Predict a meat weight for 100mm for just sampled tows; #re.form=NULL (all random effects included since only predicting on those tows that were sampled)
livefreq.condition.spatial$Condition <- predict(MWTSH.YYYY,newdata=data.frame(Log.HEIGHT.CTR=rep(log(100), dim(livefreq.condition.spatial)[1])-mean(test.data$Log.HEIGHT),
Log.DEPTH.CTR=livefreq.condition.spatial$log.ctr.adj_depth,
TOW_NO=livefreq.condition.spatial$TOW_NO),
type="response")
head(livefreq.condition.spatial)
#export for spatial plot later
write.csv(livefreq.condition.spatial, paste0("Z:/Projects/SPA2/Data/SPA2_ConditionForSpatialPlot_",surveyyear,".csv"), row.names = FALSE)
# ---- For Condition Time Series Figure ----
#Mean Depth of area
livefreqYYYY %>% group_by(STRATA_ID) %>% summarise(mean_depth = mean(ADJ_DEPTH))
# 2006
#STRATA_ID mean_depth
#1    26      -89.9
#2    57      -80.2
#set predition depth
depth.xx <- 85
condition.100mm <- predict(MWTSH.YYYY, newdata = data.frame(Log.HEIGHT.CTR=log(100) - mean(test.data$Log.HEIGHT),
Log.DEPTH.CTR = log(abs(depth.xx)) - mean(test.data$Log.DEPTH)), type = "response")
condition.100mm.2006 <- condition.100mm
condition.100mm.2006 <- data.frame(YEAR = surveyyear, Condition = condition.100mm.2006)
condition.100mm.2006$Depth <- depth.xx
condition.100mm.2006
#2006
#5.228463
#### 1996 #####
### SET ####
surveyyear <- 1996  #2024, 2006, 1996
#Construct data.frame similar to GMlivenfreq for weight per tow
livefreqYYYY <- subset(livefreq, YEAR==surveyyear)
liveweightYYYY <- livefreqYYYY
#should be the same
dim(livefreqYYYY)
dim(liveweightYYYY)
table(livefreqYYYY$YEAR)
table(liveweightYYYY$YEAR)
#Subset for year
detail.foryear <- subset(dat.all, YEAR==surveyyear)
## unique tows & observations
table(detail.foryear$TOW_NO)
## only 2 tows with detailed samples in 1996
#create dataset for model
test.data <- subset(detail.foryear, HEIGHT>40)
test.data$Log.HEIGHT <- log(test.data$HEIGHT)
test.data$Log.HEIGHT.CTR <- test.data$Log.HEIGHT - mean(test.data$Log.HEIGHT)
test.data$Log.DEPTH <- log(abs(test.data$ADJ_DEPTH)) #take abs to keep value positive
test.data$Log.DEPTH.CTR <- test.data$Log.DEPTH - mean(test.data$Log.DEPTH)
summary(test.data)
#plot depths by tow
png(paste0("Z:/Projects/SPA2/Figures/SPA2_towdepth_detailedsamples_",surveyyear,".png")) #!!!DEFINE
plot(ADJ_DEPTH~TOW_NO, data=test.data)
dev.off()
#run model
MWTSH.YYYY <-  glm(WET_MEAT_WGT~Log.HEIGHT.CTR+Log.DEPTH.CTR, data=test.data, family=Gamma(link=log), na.action = na.omit)
#MWTSH.YYYY.2 <-  glm(WET_MEAT_WGT~Log.HEIGHT.CTR+Log.DEPTH.CTR, data=test.data, family=gaussian(link=log), na.action = na.omit)
summary(MWTSH.YYYY)
plot(MWTSH.YYYY)
## Plot of Standardized Pearson residuals
#plot(density(rstandard(MWTSH.YYYY, type='pearson')))
## Plot of Standardized deviance residuals
#plot(density(rstandard(MWTSH.YYYY, type='deviance')))
## Checking independence of observations; standardized deviance residuals
#scatter.smooth(1:dim(test.data)[1], rstandard(MWTSH.YYYY, type='deviance'), col='gray')
## Plot residuals against fitted values
#scatter.smooth(predict(MWTSH.YYYY, type='response'), rstandard(MWTSH.YYYY, type='deviance'), col='gray')
## Q-Q plots
#qqnorm(qresid(MWTSH.YYYY)); qqline(qresid(MWTSH.YYYY))
## Cooks distance
#plot(cooks.distance(MWTSH.YYYY), type='h')
#cooksd_MWTSH.YYYY <- cooks.distance(MWTSH.YYYY)
#length(cooksd_MWTSH.YYYY[cooksd_MWTSH.YYYY > mean(cooksd_MWTSH.YYYY) * 2])
#test.data[23,]
#Save summary to txt file
sink(paste0("Z:/Projects/SPA2/Data/MWTSH_SPA2_",surveyyear,"_ModelSummary.txt"))
print(summary(MWTSH.YYYY))
sink()
#diagnostics
latt <- data.frame(test.data, res=residuals(MWTSH.YYYY,"pearson"),fit=fitted(MWTSH.YYYY)) #update model name
head(latt)
#Residuals vs fitted - full area
#plot(MWTSH.YYYY$residuals ~ MWTSH.YYYY$fitted.values )
plot(latt$res~ latt$fit )
#Plot of fitted values
#plot(MWTSH.YYYY$model$WET_MEAT_WGT   ~ MWTSH.YYYY$fitted.values )
#abline(0,1)
plot(latt$WET_MEAT_WGT   ~ latt$fit )
abline(0,1)
# prediction
Log.height.ctr <- log(seq(2.5, 197.5, by = 5)) - mean(test.data$Log.HEIGHT) #each shell height bin to predict on
depth.predict <- 85
fit.pred <- data.frame(Log.HEIGHT.CTR=Log.height.ctr,
Log.DEPTH.CTR = log(abs(depth.predict)) - mean(test.data$Log.DEPTH),
SH = seq(2.5, 197.5, by = 5),
depth_m = rep(depth.predict, length(Log.height.ctr)))
fit.pred$pred.mtwt <- as.vector(predict(MWTSH.YYYY,newdata=fit.pred,type="response"))
head(fit.pred)
plot(fit.pred$pred.mtwt~fit.pred$SH )
fit.pred$YEAR <- surveyyear
fit.pred.1996 <- fit.pred
#create matrix of depths by tow to use in predict function
Log.height.ctr <- log(seq(2.5, 197.5, by = 5)) - mean(test.data$Log.HEIGHT) #each shell height bin to predict on
log.ctr.adj_depth <- log(abs(livefreqYYYY$ADJ_DEPTH)) - mean(test.data$Log.DEPTH) #depth by tow
temp <- matrix(NA,dim(livefreqYYYY)[1],40)
tow.pred <- (1:dim(livefreqYYYY)[1])
#Predict using fixed effects for tows that weren't sampled for meat weight shell height
for(i in tow.pred) temp[i,] <- as.vector(predict(MWTSH.YYYY,newdata=data.frame(Log.HEIGHT.CTR=Log.height.ctr,Log.DEPTH.CTR=rep(log.ctr.adj_depth[i], 40)),type="response"))
temp
#multply temp matrix (weight) by live numbers to get weight/size bin
liveweightYYYY[,grep("BIN_ID_0", colnames(liveweightYYYY)):grep("BIN_ID_195", colnames(liveweightYYYY))] <- temp*livefreqYYYY[,grep("BIN_ID_0", colnames(livefreqYYYY)):grep("BIN_ID_195", colnames(livefreqYYYY))]
#export file for later analysis
write.csv(liveweightYYYY, paste0("Z:/Projects/SPA2/Data/SPA2liveweight",surveyyear,".csv") , row.names = FALSE)
rm(uid)
rm(pwd)
rm(un.sameotoj)
rm(pw.sameotoj)
### save workspace as .RData object
save.image(file = paste0("Z:/Projects/SPA2/Data/SPA2_",surveyyear,".RData"))
## save only the objects we need later for showing MWSH plots for different years on same plots
save(MWTSH.YYYY, latt, liveweightYYYY, detail.foryear, livefreqYYYY,
file=paste0("Z:/Projects/SPA2/Data/SPA2modeloutput_",surveyyear,".RData"))
# ----  Condition for Spatial Map ----
# Only calculates the point condition for the single year you modelled above (i.e. surveyyear that's set above)
livefreq.condition.spatial <- livefreqYYYY
#adjust depth, must center on same mean as used in original model
livefreq.condition.spatial$log.ctr.adj_depth <- log(abs(livefreq.condition.spatial$ADJ_DEPTH)) - mean(test.data$Log.DEPTH)
#subset to just those tows that were detailed sampled
livefreq.condition.spatial <- livefreq.condition.spatial[is.element(livefreq.condition.spatial$TOW_NO, unique(test.data$TOW_NO)),c("TOW_NO","START_LAT", "START_LONG", "ADJ_DEPTH","log.ctr.adj_depth")]
livefreq.condition.spatial$YEAR <- surveyyear #add year to dataframe
#Predict a meat weight for 100mm for just sampled tows; #re.form=NULL (all random effects included since only predicting on those tows that were sampled)
livefreq.condition.spatial$Condition <- predict(MWTSH.YYYY,newdata=data.frame(Log.HEIGHT.CTR=rep(log(100), dim(livefreq.condition.spatial)[1])-mean(test.data$Log.HEIGHT),
Log.DEPTH.CTR=livefreq.condition.spatial$log.ctr.adj_depth,
TOW_NO=livefreq.condition.spatial$TOW_NO),
type="response")
head(livefreq.condition.spatial)
#export for spatial plot later
write.csv(livefreq.condition.spatial, paste0("Z:/Projects/SPA2/Data/SPA2_ConditionForSpatialPlot_",surveyyear,".csv"), row.names = FALSE)
# ---- For Condition Time Series Figure ----
#Mean Depth of area
livefreqYYYY %>% group_by(STRATA_ID) %>% summarise(mean_depth = mean(ADJ_DEPTH))
#1996
#STRATA_ID mean_depth
#1  26    -79.7
#set predition depth
depth.xx <- 85
condition.100mm <- predict(MWTSH.YYYY, newdata = data.frame(Log.HEIGHT.CTR=log(100) - mean(test.data$Log.HEIGHT),
Log.DEPTH.CTR = log(abs(depth.xx)) - mean(test.data$Log.DEPTH)), type = "response")
condition.100mm.1996 <- condition.100mm
condition.100mm.1996 <- data.frame(YEAR = surveyyear, Condition = condition.100mm.1996)
condition.100mm.1996$Depth <- depth.xx
condition.100mm.1996
#1996
#17.30597
#### Write out combined files for condition at 100 mm SH for all years ####
condition.100mm <- rbind(condition.100mm.2024, condition.100mm.2006, condition.100mm.1996)
condition.100mm
### Write out
write.csv(condition.100mm, paste0("Z:/Projects/SPA2/Data/condition.100mm.csv"))
## Plot of all mtwt-sh curves on same plot
mtwtsh.fit <- rbind(fit.pred.1996, fit.pred.2006, fit.pred.2024)
ggplot(data =mtwtsh.fit, aes(x =  pred.mtwt, y =  SH, group = YEAR) ) +
geom_line()
ggplot(data =mtwtsh.fit, aes(x =  SH , y =  pred.mtwt, group = YEAR, color = YEAR) ) +
geom_line()
ggplot(data =mtwtsh.fit, aes(x =  SH , y =  pred.mtwt, group = YEAR, color = as.factor(YEAR)) ) +
geom_line()
#a 2021:   -9.964147
#b 2021:    2.662865
a <-   -9.964147
b <-    2.662865
SH <- seq(5,160, by = 5)
logWT <- a + b*log(SH)
WT <- exp(logWT)
WT
prediction <- data.frame(SH, WT)
prediction
mtwtsh.fit
SH <- seq(2.5, 197.5, by = 5)
logWT <- a + b*log(SH)
WT <- exp(logWT)
WT
prediction <- data.frame(SH, WT)
prediction
prediction
prediction <- data.frame(SH, pred.mtwt = WT)
prediction$YEAR <- 2021
prediction
test.compare <- mtwtsh.fit %>% select( SH,pred.mtwt, YEAR)
test.compare
test.compare <- rbind(test.compare, prediction)
ggplot(data =test.compare, aes(x =  SH , y =  pred.mtwt, group = YEAR, color = as.factor(YEAR)) ) +
geom_line()
